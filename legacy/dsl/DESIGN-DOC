=================
Macro Constants: (supplied when called)
Decoding:
 BUF  -> Refers to the SYMBOL that refers to the byte-array of data incoming
 OFF  -> Refers to the SYMBOL that refers to the offset counter
 IO   -> Refers to the SYMBOL that refers to outbound IO stream
Encoding:
 BUFFER -> Refers to the SYMBOL that refers to the byte-array needed for writing
 IO     -> Refers to the SYMBOL that refers to the inbound IO stream

=================
=================
Functions:
int-64 NAME
 Decoding:
 - reads in a 64-bit signed integer from BUF and writes with the given NAME to IO, where NAME is a STRING 
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-sint BUF OFF 8 IO ";NAME (int-64):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 64-bit signed integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 8 BUFFER)

int-32 NAME
 Decoding:
 - reads in a 32-bit signed integer from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-sint BUF OFF 4 IO ";NAME (int-32):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 32-bit signed integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 4 BUFFER)

int-16 NAME
 Decoding:
 - reads in a 16-bit signed integer from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-sint BUF OFF 2 IO ";NAME (int-16):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 16-bit signed integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 2 BUFFER)

int-8 NAME
 Decoding:
 - reads in a 8-bit signed integer from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-sint BUF OFF 1 IO ";NAME (int-8):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 8-bit signed integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 1 BUFFER)

uint-64 NAME
 Decoding:
 - reads in a 64-bit unsigned integer from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-uint BUF OFF 8 IO ";NAME (uint-64):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 64-bit unsigned integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 8 BUFFER)

uint-32 NAME
 Decoding:
 - reads in a 32-bit unsigned integer from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-uint BUF OFF 4 IO ";NAME (uint-32):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 32-bit unsigned integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 4 BUFFER)

uint-16 NAME
 Decoding:
 - reads in a 16-bit unsigned integer from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-uint BUF OFF 2 IO ";NAME (uint-16):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 16-bit unsigned integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 2 BUFFER)

uint-8 NAME
 Decoding:
 - reads in a 8-bit unsigned integer from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-uint BUF OFF 1 IO ";NAME (uint-8):"))
 Encoding: (Note: NAME is not expected for encoding and SHOULD NOT be included)
 - reads in a 8-bit unsigned integer from BUFFER and writes to IO
 - Encode Interpretation: (rinte IO 1 BUFFER)

float NAME
 Decoding:
 - reads in a 5-byte floating point number from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-float BUF OFF IO ";NAME (float):"))
 Encoding:
 - reads in a 5-byte floating point number from BUFFER and writes to IO
 - Encode Interpretation: (rfloate IO BUFFER)

string NAME
 Decoding:
 - reads in a null(0) terminated string from BUF and writes with the given NAME to IO, where NAME is a STRING
   or VAR-SYM whose value is a STRING. It also increments OFF when used independetly
 - Decode Interpretation: (setf off (rw-str BUF OFF IO ";NAME (float):"))
 Encoding:
 - reads in a null(0) terminated string from BUFFER and writes to IO
 - writes it in non \0 terminated format
 - Encode Interpretation: (rstre IO BUFFER nil)

cstring NAME
  Decoding:
  - See `string'
  Encoding
  - reads in a null(0) terminated string from BUFFER and writes to IO
  - writes it in \0 terminated format
  - Encode Interpretation: (rstre IO BUFFER t)
=================
=================
Variables:
let VAR-SYM = {constant/lisp code}    -> (let ((VAR-SYM {constant/lisp code})) ...)
let VAR-SYM = {function}    -> see below where float is the example function

let A = float "..." 
=>
(multiple-value-bind (tmp1 A)
    (rw-float BUF OFF IO ";...")
  (setf off tmp1)
  ...)

================
================
